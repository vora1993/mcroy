<?php
$title = $post->getPostTitle();
$this->headTitle($title);
?>
<div class="page-title">
    <div class="image-title"><img src="<?php echo $this->basePath('assets/img/bg-'.$post->getSeo().'.png') ?>" class="img-responsive"></div>
    <div class="container">
        <h2><?php echo $title ?></h2>
    </div>
</div>

<div class="container">
    <div class="page-content-inner">
        <div class="blog-page blog-content">
            <div class="row">
                <div class="col-md-6">
                    <div class="info-contact">
                        <h2><?php echo $this->translate("Contact Info") ?></h2>
                        <h3><?php echo $this->setting()->company_name ?></h3>
                        <ul>
                            <li><i class="fa fa-map-marker"></i> <?php echo $this->setting()->company_address ?></li>
                            <li><i class="fa fa-phone"></i> <?php echo $this->setting()->company_phone ?></li>
                            <li><i class="fa fa-fax"></i> <?php echo $this->setting()->company_fax ?></li>
                            <li><i class="fa fa-envelope"></i> <?php echo $this->setting()->company_email ?></li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-contact">
                        <h2><?php echo $this->translate("Contact Form") ?></h2>
                        <div id="success"></div>
                        <form action="<?php echo $this->url("page", array("action" => "contact-us")) ?>" id="contact-form" method="post">
				            <div class="line-c contact_name">
                                <input type="text" name="contact_name" required="true" placeholder="Your Name">
							</div>
      						<div class="line-c contact_phone">
                                <input type="text" name="contact_phone" required="true" placeholder="Phone Number">
							</div>
							<div class="line-c contact_email">
      							   <input type="text" name="contact_email" required="true" placeholder="Email Address">
							</div>
							<div class="line-c contact_subject">
      							   <input type="text" name="contact_subject" placeholder="Subject">
							</div>
							<div class="line-c contact_message line-c-full">
                                <textarea name="contact_message" placeholder="Message"></textarea>
							</div>
                            <div class="line-c contact_captcha">
                                <div class="g-recaptcha" data-sitekey="<?php echo $this->setting()->recaptcha_site_key ?>" data-callback="recaptchaCallback"></div>
                                <span class="r-recaptcha"></span>
                            </div>
							<div class="line-c line-c-full">
                                <input type="hidden" class="hiddenRecaptcha required" name="hiddenRecaptcha" id="hiddenRecaptcha">
				                <button type="submit" class="btn btn-primary"><?php echo $this->translate("Send Message") ?></button>
							</div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container" style="margin-bottom: 50px;">
    <div class="row">
        <div class="col-md-12">
            <div class="maps" id="gmap_marker"></div>
        </div>
    </div>
</div>
<?php
$this->inlineScript()->offsetSetFile(99, 'https://www.google.com/recaptcha/api.js');
$this->inlineScript()->offsetSetFile(100, 'http://maps.google.com/maps/api/js?key=AIzaSyCqSalLJqoF5OqFrm0Z3mMaEF2GtuoFa0k');
$this->inlineScript()->offsetSetFile(101, $this->basePath('assets/plugins/gmaps/gmaps.min.js'));
$this->inlineScript()->offsetSetFile(102, $this->basePath('assets/js/custom.js'));
$this->inlineScript()->captureStart();
echo <<<JS
var map = new GMaps({
    div: '#gmap_marker',
    lat: {$this->setting()->company_latitude},
    lng: {$this->setting()->company_longtitude},
});
map.addMarker({
    lat: {$this->setting()->company_latitude},
    lng: {$this->setting()->company_longtitude},
    title: '{$this->setting()->company_name}',
    infoWindow: {
        content: '<h4>{$this->setting()->company_name}</h4><p>{$this->setting()->company_address}</p>'
    },
    icon: full_url + "/data/image/icon-marker.png"
});
map.setZoom(12);

var form = $('#contact-form');
form.validate({
    focusInvalid: false, // do not focus the last invalid input
    ignore: "", // validate all fields including form hidden input
    rules: {
        contact_name: {
            required: true
        },
        contact_email: {
            required: true,
            email: true
        },
        contact_phone: {
            required: true
        },
        contact_message: {
            required: true
        },
        hiddenRecaptcha: {
            required: function () {
                if (grecaptcha.getResponse() == '') {
                    $('.r-recaptcha').html('Invalid captcha');
                    return true;
                } else {
                    $('.r-recaptcha').empty();
                    return false;
                }
            }
        }
    },

    invalidHandler: function(event, validator) { //display error alert on form submit
        App.scrollTo($(".has-error"), -15);
    },

    errorPlacement: function(error, element) {
        if(element.attr("name") == "contact_name") {
            $('.contact_name').addClass("has-error");
        }
        if(element.attr("name") == "contact_email") {
            $('.contact_email').addClass("has-error");
        }
        if(element.attr("name") == "contact_phone") {
            $('.contact_phone').addClass("has-error");
        }
        if(element.attr("name") == "contact_message") {
            $('.contact_message').addClass("has-error");
        }
        if(element.attr("name") == "hiddenRecaptcha") {
            $('.contact_captcha').addClass("has-error");
        }
    },

    submitHandler: function(form) {
        // form validation success, call ajax form submit
        // setup some local variables
        var form = $(form);

        // let's select and cache all the fields
        var inputs = form.find("input, select, button, textarea");

        // serialize the data in the form
        var serializedData = form.serialize();

        // let's disable the inputs for the duration of the ajax request
        inputs.prop("disabled", true);

        // fire off the request to /form.php

        request = $.ajax({
            url: form.attr("action"),
            type: "post",
            data: serializedData
        });

        // Clear Message
        $('.line-c').removeClass('has-error');

        // callback handler that will be called on success
        request.done(function (response, textStatus, jqXHR) {
            var result = $.parseJSON(response);
            if(result.success) {
                App.blockUI({boxed: true});
                $('#success').html("Your message has been successfully sent. We will contact you very soon!");
            }
            setTimeout(function(){
                App.unblockUI();
                $('.form-contact input, .form-contact textarea').val('');
            }, 1000);
            setTimeout(function(){
                $('#success').empty();
            }, 5000);
        });

        // callback handler that will be called on failure
        request.fail(function (jqXHR, textStatus, errorThrown) {
            // log the error to the console
            console.log("The following error occured: " + textStatus, errorThrown);
        });

        // callback handler that will be called regardless
        // if the request failed or succeeded
        request.always(function () {
            // reenable the inputs
            App.blockUI({boxed: true});
            inputs.prop("disabled", false);
        });
    }
});
JS;
$this->inlineScript()->captureEnd();
?>