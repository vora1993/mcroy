<?php
$title = $this->translate("Edit User Role");
$this->headTitle($title);
?>
<!-- BEGIN SIDEBAR -->
<?php echo $this->partial('backend_sidebar', array('view' => 'user', 'action' => 'role')); ?>
<!-- END SIDEBAR -->
<!-- BEGIN CONTENT -->
<div class="page-content-wrapper">
    <div class="page-content">
        <!-- BEGIN PAGE BAR -->
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="<?php echo $this->url('admin') ?>"><?php echo $this->translate("Dashboard") ?></a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <a href="<?php echo $this->url('admin/user', array("action" => "role")) ?>"><?php echo $this->translate("Roles") ?></a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span><?php echo $this->translate("Edit") ?></span>
                </li>
            </ul>
        </div>
        <!-- END PAGE BAR -->
        <div class="row">
            <div class="col-md-12">
                <div class="portlet light bordered form-fit">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="icon-users"></i>
                            <span class="caption-subject sbold uppercase"><?php echo $this->translate("Edit User Role") ?> <?php echo $this->userrole->getName() ?></span>
                        </div>
                    </div>
                    <div class="portlet-body form">
                        <!-- BEGIN FORM-->
                        <form action="<?php echo $this->url("admin/user", array('action' => "edit-role", 'id' => $this->userrole->getId())) ?>" id="form_userrole" class="form-horizontal form-bordered">
                            <div class="form-body">
                                <div class="form-group">
                                    <label class="control-label col-md-3"><?php echo $this->translate("Name") ?><span class="required"> * </span></label>
                                    <div class="col-md-6">
                                        <input type="text" name="name" data-required="1" class="form-control" value="<?php echo $this->userrole->getName(); ?>" /> 
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-3"><?php echo $this->translate("Privileges") ?></label>
                                    <div class="col-md-6">
                                        <?php
                                        $current_allow = \Zend\Json\Json::decode ( $this->userrole->getAllow() );
                                        if(count($this->roles) > 0) {
                                            foreach ($this->roles as $routerName => $actionNameArr) {
                                                ?>
                                                <label><?php echo $routerName; ?></label>
                                                <div class="mt-checkbox-inline">
                                                    <?php 
                                                    if(count($actionNameArr) > 0) {
                                                        foreach ($actionNameArr as $controllerName) {
                                                            $allow = trim($routerName).'--'.trim($controllerName);
                                                            ?>
                                                            <div class="md-checkbox inline-block">
                                                                <input type="checkbox" name="allow[]" id="allow_<?php echo $allow ?>" class="md-check allow" value="<?php echo $allow ?>"<?php if(in_array($allow, $current_allow)) echo "checked" ?>> 
                                                                <label for="allow_<?php echo $allow ?>">
                                                                    <span></span>
                                                                    <span class="check"></span>
                                                                    <span class="box"></span> <?php echo trim($controllerName) ?>
                                                                </label>
                                                            </div>
                                                            <?php
                                                        }
                                                    }
                                                    ?>
                                                </div>
                                                <?php
                                            }
                                        }
                                        ?>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-3"><?php echo $this->translate("Status") ?></label>
                                    <div class="col-md-6">
                                        <select class="form-control" name="status" disabled="disabled">
                                            <option value="1"<?php if($this->userrole->getStatus() == 1) echo ' selected="selected"'; ?>><?php echo $this->translate("Active") ?></option>
                                            <option value="0"<?php if($this->userrole->getStatus() == 0) echo ' selected="selected"'; ?>><?php echo $this->translate("Deactive") ?></option>
                                            <option value="2"<?php if($this->userrole->getStatus() == 2) echo ' selected="selected"'; ?>><?php echo $this->translate("Pending") ?></option>
                                            <option value="3"<?php if($this->userrole->getStatus() == 3) echo ' selected="selected"'; ?>><?php echo $this->translate("Suspend") ?></option>
                                            <option value="4"<?php if($this->userrole->getStatus() == 4) echo ' selected="selected"'; ?>><?php echo $this->translate("Trash") ?></option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-offset-3 col-md-9">
                                        <input type="hidden" name="deny" value="" />
                                        <button type="submit" class="btn red-thunderbird"><i class="fa fa-check"></i> <?php echo $this->translate("Update") ?></button>
                                        <button type="button" class="btn btn-outline" onclick="cancel('admin/user/role')"><?php echo $this->translate("Cancel") ?></button>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <!-- END FORM-->
                    </div>
                </div>
            </div>
        </div>
    </div>            
</div>
<!-- END CONTENT -->
<?php
$offStyle = 12;
$offScript = 10;
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/jquery-validation/js/jquery.validate.min.js'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/jquery-validation/js/additional-methods.min.js'));
$this->inlineScript()->offsetSetFile(100, $this->basePath('assets/js/custom_functions.js'));
$this->inlineScript()->captureStart();
echo <<<JS
var form = $('#form_userrole');
form.validate({
    errorElement: 'span', //default input error message container
    errorClass: 'help-block', // default input error message class
    focusInvalid: false, // do not focus the last invalid input
    ignore: "",
    rules: {
        name: {
            required: true
        }
    },
    
    highlight: function(element) { // hightlight error inputs
        $(element)
            .closest('.form-group').addClass('has-error'); // set error class to the control group
    },

    success: function(label) {
        label.closest('.form-group').removeClass('has-error');
        label.remove();
    },

    errorPlacement: function(error, element) {
        error.insertAfter(element);
    },

    submitHandler: function (form) {
        // setup some local variables
        var form = $(form);
        
        // let's select and cache all the fields
        var inputs = form.find("input, select, button, textarea");
        
        // serialize the data in the form
        var serializedData = form.serialize();
    
        // let's disable the inputs for the duration of the ajax request
        inputs.prop("disabled", true);
        
        // fire off the request to /form.php

        request = $.ajax({
            url: form.attr("action"),
            type: "post",
            data: serializedData
        });
        
        // Clear Message
        $('.user-form .form-group').removeClass('has-error');
        $('.user-form .help-block, .user-form .alert').remove();
        
        // callback handler that will be called on success
        request.done(function (response, textStatus, jqXHR) {
            var result = $.parseJSON(response);
            if(result.error) {
                toastr.error("Something error. Please check.");
                if(result.error.name){
                    $('#form_userrole input[name=name]').parent().parent().addClass('has-error');
                    $('#form_userrole input[name=name]').after('<span id="name-error" class="help-block">' + result.error.name + '</span>');
                }
            } else {
                if(result.success) {
                    toastr.success(result.msg);
                    setTimeout(function(){ window.location.href = full_url+'/admin/user/role'; }, 1500);
                } else {
                    toastr.warning(result.msg);
                }
            }
        });
        
        // callback handler that will be called on failure
        request.fail(function (jqXHR, textStatus, errorThrown) {
            // log the error to the console
            toastr.error("The following error occured: " + textStatus, errorThrown);
        });
        
        // callback handler that will be called regardless
        // if the request failed or succeeded
        request.always(function () {
            // reenable the inputs
            inputs.prop("disabled", false);
        });
    }
});
JS;
$this->inlineScript()->captureEnd();
?>