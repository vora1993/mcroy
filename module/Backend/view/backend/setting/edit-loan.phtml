<?php
$title = $this->translate("Edit Loan");
$this->headTitle($title);
?>
<!-- BEGIN SIDEBAR -->
<?php echo $this->partial('backend_sidebar', array('view' => 'setting', 'action' => 'loan')); ?>
<!-- END SIDEBAR -->
<!-- BEGIN CONTENT -->
<div class="page-content-wrapper">
    <div class="page-content">
        <!-- BEGIN PAGE BAR -->
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="<?php echo $this->url('admin') ?>"><?php echo $this->translate("Dashboard") ?></a>
                    <i class="fa fa-angle-double-right"></i>
                </li>
                <li>
                    <a href="<?php echo $this->url('admin/setting') ?>"><?php echo $this->translate("Setting") ?></a>
                    <i class="fa fa-angle-double-right"></i>
                </li>
                <li>
                    <span><?php echo $this->translate("Edit Loan") ?></span>
                </li>
            </ul>
        </div>
        <!-- END PAGE BAR -->
        
        <div class="row">
            <div class="col-md-12">
                <div class="portlet light portlet-fit portlet-form bordered">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="icon-settings font-red"></i>
                            <span class="caption-subject font-red sbold uppercase"><?php echo $this->translate($title) ?></span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <!-- BEGIN FORM-->
                        <form action="<?php echo $this->url("admin/setting", array('action' => 'edit-loan')) ?>" id="form_setting" class="form-horizontal">
                            <div class="form-body">
                                <?php
                                $array_key = array('max_loan_tenure', 'min_loan_amount', 'max_loan_amount', 'max_loan_compare', 'amt_business_loan', 'amt_property_loan', 'notify');
                                foreach ($this->settings as $key => $setting): ?>
                                    <?php if(in_array($setting->getKey(), $array_key)): ?>
                                    <div class="form-group">
                                        <label class="control-label col-md-4"><?php echo $setting->getName(); ?></label>
                                        <div class="col-md-8">
                                            <?php if($setting->getKey() === 'notify'): ?>
                                            <div class="repeater">
                                                <div data-repeater-list="repeater">
                                                    <?php
                                                    $notify = \Zend\Json\Json::decode($setting->getValue());
                                                    if(count($notify) > 0) {
                                                        foreach ($notify as $value) {
                                                        ?>
                                                        <div data-repeater-item class="repeater-item overflow">
                                                            <div class="repeater-cell">
                                                                    <input type="text" name="<?php echo $setting->getKey(); ?>" value="<?php echo $value ?>" class="form-control repeater-input-inline" />
                                                                    <a href="javascript:;" data-repeater-delete class="btn btn-danger repeater-delete repeater-del-right repeater-btn-inline">
                                                                        <i class="fa fa-close"></i> 
                                                                    </a>
                                                            </div>
                                                        </div>
                                                        <?php
                                                        }
                                                    } else {
                                                        ?>
                                                        <div data-repeater-item class="repeater-item overflow">
                                                            <div class="repeater-cell">
                                                                    <input type="text" name="<?php echo $setting->getKey(); ?>" class="form-control repeater-input-inline" />
                                                                    <a href="javascript:;" data-repeater-delete class="btn btn-danger repeater-delete repeater-del-right repeater-btn-inline">
                                                                        <i class="fa fa-close"></i> 
                                                                    </a>
                                                            </div>
                                                        </div>
                                                        <?php    
                                                    }
                                                    ?>
                                                </div>
                                                    <a href="javascript:;" data-repeater-create class="btn btn-success repeater-add">
                                                <i class="fa fa-plus"></i> Add new</a>
                                            </div>
                                            <?php else: ?>
                                            <input type="text" name="<?php echo $setting->getKey(); ?>" class="form-control" value="<?php echo $setting->getValue(); ?>" /> 
                                            <?php endif; ?>
                                        </div>
                                    </div>
                                    <?php endif;?>
                                <?php endforeach;?>
                            </div>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-offset-4 col-md-8">
                                        <button type="submit" class="btn red-thunderbird"><i class="fa fa-check"></i> <?php echo $this->translate("Submit") ?></button>
                                        <button type="button" class="btn btn-outline" onclick="cancel('admin/setting')"><?php echo $this->translate("Cancel") ?></button>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <!-- END FORM-->
                    </div>
                </div>
            </div>
        </div>
    </div>            
</div>
<!-- END CONTENT -->
<?php
$offStyle = 12;
$offScript = 10;
//$this->headLink()->offsetSetStylesheet($offStyle++, $this->basePath('assets/plugins/bootstrap-fileinput/bootstrap-fileinput.css'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/jquery-repeater/jquery.repeater.js'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/jquery-validation/js/jquery.validate.min.js'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/jquery-validation/js/additional-methods.min.js'));
$this->inlineScript()->offsetSetFile(100, $this->basePath('assets/js/custom_functions.js')); 
$this->inlineScript()->captureStart();
echo <<<JS
$('.repeater').repeater({
    show: function () {
        $(this).slideDown();
    },
    hide: function (deleteElement) {
        $(this).slideUp(deleteElement);
    }
});

var form = $('#form_setting');
form.validate({
    errorElement: 'span', //default input error message container
    errorClass: 'help-block', // default input error message class
    focusInvalid: false, // do not focus the last invalid input
    ignore: "",
    rules: {
        max_loan_tenure: {
            range: [1, 20]
        },
        min_loan_amount: {
            range: [10000, 100000]
        },
        max_loan_amount: {
            range: [50000, 1000000]
        }
    },
    
    highlight: function(element) { // hightlight error inputs
        $(element)
            .closest('.form-group').addClass('has-error'); // set error class to the control group
    },

    success: function(label) {
        label.closest('.form-group').removeClass('has-error');
        label.remove();
    },

    errorPlacement: function(error, element) {
        error.insertAfter(element);
    },

    submitHandler: function (form) {
        // setup some local variables
        var form = $(form);
        
        // let's select and cache all the fields
        var inputs = form.find("input, select, button, textarea");
        
        // serialize the data in the form
        var serializedData = form.serialize();
    
        // let's disable the inputs for the duration of the ajax request
        inputs.prop("disabled", true);
        
        // fire off the request to /form.php

        request = $.ajax({
            url: form.attr("action"),
            type: "post",
            data: serializedData
        });
        
        // Clear Message
        $('.user-form .form-group').removeClass('has-error');
        $('.user-form .help-block, .user-form .alert').remove();
        
        // callback handler that will be called on success
        request.done(function (response, textStatus, jqXHR) {
            var result = $.parseJSON(response);
            if(result.error) {
                toastr.error("Something error. Please check");
            } else {
                if(result.success) {
                    toastr.success(result.msg);
                } else {
                    toastr.warning(result.msg);
                }
            }
        });
        
        // callback handler that will be called on failure
        request.fail(function (jqXHR, textStatus, errorThrown) {
            // log the error to the console
            toastr.error("The following error occured: " + textStatus, errorThrown);
        });
        
        // callback handler that will be called regardless
        // if the request failed or succeeded
        request.always(function () {
            // reenable the inputs
            inputs.prop("disabled", false);
        });
    }
});
JS;
$this->inlineScript()->captureEnd();
?>