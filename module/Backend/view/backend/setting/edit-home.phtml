<?php
$title = $this->translate("Edit Homepage");
$this->headTitle($title);
?>
<!-- BEGIN SIDEBAR -->
<?php echo $this->partial('backend_sidebar', array('view' => 'setting', 'action' => 'home')); ?>
<!-- END SIDEBAR -->
<!-- BEGIN CONTENT -->
<div class="page-content-wrapper">
    <div class="page-content">
        <!-- BEGIN PAGE BAR -->
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="<?php echo $this->url('admin') ?>"><?php echo $this->translate("Dashboard") ?></a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <a href="<?php echo $this->url('admin/setting') ?>"><?php echo $this->translate("Setting") ?></a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span><?php echo $this->translate("Edit Homepage") ?></span>
                </li>
            </ul>
        </div>
        <!-- END PAGE BAR -->
        
        <div class="row">
            <div class="col-md-12">
                <div class="portlet light bordered form-fit">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="icon-settings"></i>
                            <span class="caption-subject sbold uppercase"><?php echo $this->translate($title) ?></span>
                        </div>
                    </div>
                    <div class="portlet-body form">
                        <!-- BEGIN FORM-->
                        <form action="<?php echo $this->url("admin/setting", array('action' => 'edit-home')) ?>" id="form_setting" class="form-horizontal form-bordered">
                            <div class="form-body">
                                <div class="alert alert-danger display-hide">
                                    <button class="close" data-close="alert"></button> You have some form errors. Please check below. </div>
                                <div class="alert alert-success display-hide">
                                    <button class="close" data-close="alert"></button> Your form validation is successful! </div>
                                
                                <?php
                                $company_array_key = array('homepage');
                                foreach ($this->settings as $key => $setting): ?>
                                    <?php if(in_array($setting->getKey(), $company_array_key)): ?>
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <?php if($setting->getKey() === 'homepage'){?>
                                            <textarea name="<?php echo $setting->getKey(); ?>" class="form-control tinymce"><?php echo $setting->getValue() ?></textarea>
                                            <?php }?>
                                        </div>
                                    </div>
                                    <?php else: ?>
                                    <?php endif;?>
                                <?php endforeach;?>
                            </div>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-12">
                                        <button type="submit" class="btn red-thunderbird"><i class="fa fa-check"></i> <?php echo $this->translate("Submit") ?></button>
                                        <button type="button" class="btn btn-outline" onclick="cancel('admin/setting')"><?php echo $this->translate("Cancel") ?></button>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <!-- END FORM-->
                    </div>
                </div>
            </div>
        </div>
    </div>            
</div>
<!-- END CONTENT -->
<?php
$offStyle = 12;
$offScript = 10;
$this->headLink()->offsetSetStylesheet($offStyle++, $this->basePath('assets/plugins/bootstrap-fileinput/bootstrap-fileinput.css'));
$this->headLink()->offsetSetStylesheet($offStyle++, $this->basePath('assets/plugins/dropzone/basic.min.css'));
$this->headLink()->offsetSetStylesheet($offStyle++, $this->basePath('assets/plugins/dropzone/dropzone.min.css'));
$this->headLink()->offsetSetStylesheet($offStyle++, $this->basePath('assets/css/simplePagination.css'));
$this->headLink()->offsetSetStylesheet($offStyle++, $this->basePath('assets/plugins/mlib/css/mlib.css'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/jquery-validation/js/jquery.validate.min.js'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/jquery-validation/js/additional-methods.min.js'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/bootstrap-fileinput/bootstrap-fileinput.js'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/bootstrap-formhelpers/js/bootstrap-formhelpers.min.js'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/tinymce/js/tinymce/tinymce.min.js'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/plugins/dropzone/dropzone.min.js'));
$this->inlineScript()->offsetSetFile($offScript++, $this->basePath('assets/js/jquery.simplePagination.js'));
$this->inlineScript()->offsetSetFile(33, $this->basePath('assets/plugins/mlib/js/mlib.js'));
$this->inlineScript()->offsetSetFile(100, $this->basePath('assets/js/custom_functions.js'));                        
$this->inlineScript()->captureStart();
echo <<<JS
tinymce.baseURL = "{$this->basePath('assets/plugins/tinymce/js/tinymce')}";
tinymce.PluginManager.add('mce_mlib', function(editor, url) {
	var tinyedit_id = editor.id;
    editor.addButton('mce_mlib', {
        text: 'Insert Media',
        icon: false,
        id: 'mediabtn_'+tinyedit_id,
        icon : 'image',
        onclick: function() {
            var newid = '#mediabtn_'+tinyedit_id;
            if($(newid).attr('mboxmce_init')===undefined){
                $(newid).attr('mboxmce_init', tinyedit_id);
                $(newid).mlibready({allowed:'jpg,png,gif,jpeg,txt,zip,rar,doc,docx,ppt,pptx,xls,xlsx,csv,tar,gz', mcename:tinyedit_id, returnas:'all'});
                $(newid).trigger('click');
			}
        }
    });

    // Adds a menu item
    editor.addMenuItem('mce_mlib', {
        text: 'Insert Media',
        context: 'file',
		icon : 'image',
		id: 'mediabtn_'+tinyedit_id,
        onclick: function() {
			var newid = '#mediabtn_'+tinyedit_id;
			if($(newid).attr('mboxmce_init')===undefined){
			$(newid).attr('mboxmce_init', tinyedit_id);
			$(newid).mlibready({allowed:'jpg,png,gif,jpeg,txt,zip,rar,doc,docx,ppt,pptx,xls,xlsx,csv,tar,gz', mcename:tinyedit_id, returnas:'all'});
			$(newid).trigger('click');
			}
        }
    });
});
tinymce.init({
    selector: '.tinymce',
    height: 300,
    menubar: false,
    statusbar: false,
    //plugins: 'mce_mlib advlist table link textcolor code',
    //toolbar: 'mce_mlib | advlist | table | link | styleselect | bold italic | alignment | alignmentv2 | fontsizeselect | forecolor | backcolor | code',
    plugins: [
        'advlist autolink lists link image charmap print preview hr anchor pagebreak',
        'searchreplace wordcount visualblocks visualchars code fullscreen',
        'insertdatetime media nonbreaking save table contextmenu directionality',
        'emoticons template paste textcolor colorpicker textpattern imagetools codesample'
    ],
    toolbar1: 'undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
    toolbar2: 'print preview media | forecolor backcolor emoticons | codesample help | code',
    image_advtab: true,
    fontsize_formats: '8px 10px 12px 14px 18px 24px 36px',
    setup: function (editor) {
        editor.on('change', function () {
            editor.save();
        });
    }
});

var form = $('#form_setting');
form.validate({
    errorElement: 'span', //default input error message container
    errorClass: 'help-block', // default input error message class
    focusInvalid: false, // do not focus the last invalid input
    ignore: "",
    rules: {
        company_name: {
            required: true
        }
    },
    
    highlight: function(element) { // hightlight error inputs
        $(element)
            .closest('.form-group').addClass('has-error'); // set error class to the control group
    },

    success: function(label) {
        label.closest('.form-group').removeClass('has-error');
        label.remove();
    },

    errorPlacement: function(error, element) {
        error.insertAfter(element);
    },

    submitHandler: function (form) {
        // setup some local variables
        var form = $(form);
        
        // let's select and cache all the fields
        var inputs = form.find("input, select, button, textarea");
        
        // serialize the data in the form
        var serializedData = form.serialize();
    
        // let's disable the inputs for the duration of the ajax request
        inputs.prop("disabled", true);
        
        // fire off the request to /form.php

        request = $.ajax({
            url: form.attr("action"),
            type: "post",
            data: serializedData
        });
        
        // Clear Message
        $('.user-form .form-group').removeClass('has-error');
        $('.user-form .help-block, .user-form .alert').remove();
        
        // callback handler that will be called on success
        request.done(function (response, textStatus, jqXHR) {
            var result = $.parseJSON(response);
            if(result.error) {
                toastr.error("Something error. Please check.");
            } else {
                if(result.success) {
                    toastr.success(result.msg);
                    setTimeout(function(){ window.location.href = full_url+'/admin/setting'; }, 1500);
                } else {
                    toastr.warning(result.msg);
                }
            }
        });
        
        // callback handler that will be called on failure
        request.fail(function (jqXHR, textStatus, errorThrown) {
            // log the error to the console
            toastr.error("The following error occured: " + textStatus, errorThrown);
        });
        
        // callback handler that will be called regardless
        // if the request failed or succeeded
        request.always(function () {
            // reenable the inputs
            inputs.prop("disabled", false);
        });
    }
});
JS;
$this->inlineScript()->captureEnd();
?>